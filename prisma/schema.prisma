generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
  runtime  = "vercel-edge"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_DATABASE_URL")
}

model User {
  id            String    @id @default(cuid()) @map("id")
  name          String?   @map("name")
  email         String    @unique @map("email")
  emailVerified DateTime? @map("email_verified_at")
  username      String?   @unique @map("username")
  password      String?   @map("password")
  image         String?   @map("image_url")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  accounts              Account[]
  emailVerificationCode EmailVerificationCode[]

  @@map("users")
}

model Account {
  userId            String  @map("user_id")
  type              String  @map("type")
  provider          String  @map("provider")
  providerAccountId String  @map("provider_account_id")
  refresh_token     String? @map("refresh_token")
  access_token      String? @map("access_token")
  expires_at        Int?    @map("expires_at")
  token_type        String? @map("token_type")
  scope             String? @map("scope")
  id_token          String? @map("id_token")
  session_state     String? @map("session_state")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
  @@map("accounts")
}

model EmailVerificationCode {
  id        String   @id @default(cuid()) @map("id")
  userId    String   @map("user_id")
  code      String   @map("code")
  expiresAt DateTime @map("expires_at")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("email_verification_codes")
}
